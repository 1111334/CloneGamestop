<--DESCRIZIONE DA RIVISIONARE E SPIEGARE NEL DETTAGLIO-->

Il progetto "Clone-Gamestop" è un'applicazione di tipo e-commerce che si propone di replicare alcune funzionalità del noto sito di vendita di videogiochi "Gamestop".
L'applicazione consente agli utenti di visualizzare, cercare e acquistare prodotti come videogiochi, console e accessori correlati.

Inoltre, offre funzionalità per la gestione degli utenti, inclusa la registrazione, l'autenticazione e la gestione del profilo.
Gli utenti possono aggiungere prodotti al proprio carrello, effettuare ordini e visualizzare lo storico degli acquisti.

Il progetto utilizza tecnologie come Spring Boot per lo sviluppo del backend,
Spring Data JPA per l'accesso ai dati, MySQL come database,
Spring Security per la gestione dell'autenticazione e dell'autorizzazione degli utenti,
e Spring Mail per l'invio di notifiche via email.

Gli strumenti e le librerie di testing, come JUnit,
sono utilizzati per garantire la qualità del codice e per effettuare test automatizzati.
L'applicazione è strutturata seguendo i principi di progettazione e sviluppo software basati su Spring Framework e segue le migliori pratiche di sviluppo.

1. Dipendenze del progetto (pom.xml):
Il file pom.xml definisce le dipendenze del progetto, inclusi i framework, le librerie e gli strumenti utilizzati.
Alcune dipendenze includono:

Spring Boot Starter: Fornisce le dipendenze necessarie per avviare un'applicazione Spring Boot.
Spring Data JPA: Per l'accesso ai dati e la persistenza.
MySQL Connector: Per la connessione al database MySQL.
Spring Boot Starter Test: Per i test automatizzati.
Lombok: Una libreria che semplifica la scrittura di codice riducendo la quantità di boilerplate code.

2. Controller:
I controller gestiscono le richieste HTTP provenienti dai client e coordinano le interazioni con i servizi sottostanti.
Ogni controller è annotato con @RestController per indicare che fornisce API RESTful.

3. Servizi:
I servizi contengono la logica di business dell'applicazione.
Gestiscono la logica di elaborazione delle richieste provenienti dai controller e interagiscono con i repository per accedere ai dati.

4. Repository:
I repository sono interfacce che estendono JpaRepository di Spring Data JPA.
Forniscono metodi per eseguire operazioni CRUD (Create, Read, Update, Delete) sul database.

5. Test unitari:
Sono presenti test unitari per alcune parti del codice,
che consentono di verificare il corretto funzionamento dei metodi e delle classi.

6. Configurazioni:
All'interno del codice sono presenti configurazioni per il database MySQL e per l'invio di email tramite SMTP.

7. Security:
Sezioni di codice commentate riguardano l'implementazione di Spring Security e JSON Web Token (JWT) per l'autenticazione e l'autorizzazione degli utenti,
 ma sembra che al momento siano disabilitate.

8. Descrizioni dettagliate:
Ogni parte del codice è stata commentata per fornire una descrizione dettagliata di cosa fa ogni riga o blocco di codice,
aiutando a capire il suo scopo e il funzionamento complessivo dell'applicazione.



