#MYSQL Database
# Imposta la strategia di generazione del database. In questo caso, viene impostato su "update",
# il che significa che Hibernate creerà il database se non esiste, altrimenti lo aggiornerà.
spring.jpa.hibernate.ddl-auto=update

# URL di connessione al database MySQL, che include il nome del database.
spring.datasource.url=jdbc:mysql://localhost:3306/gamestop_clone_db

# Nome utente per accedere al database MySQL.
spring.datasource.username=root
# Password per accedere al database MySQL.
spring.datasource.password=Maicoldevelhope12.
# Specifica il nome della classe del driver JDBC per MySQL.
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# Abilita la visualizzazione delle query SQL generate da Hibernate nella console.
spring.jpa.show-sql: true

# Mail configuration
#L'indirizzo del server SMTP (nel caso di Gmail, smtp.gmail.com).
spring.mail.host=smtp.gmail.com
#La porta del server SMTP (587 per Gmail).
spring.mail.port=587
#Il nome utente del tuo account Gmail.
spring.mail.username=test@gmail.com
#La password del tuo account Gmail.
spring.mail.password=test
#Specifica se l'autenticazione SMTP è abilitata (di solito è necessaria per Gmail).
spring.mail.properties.mail.smtp.auth=true
#Abilita il supporto STARTTLS per la connessione sicura al server SMTP (necessario per Gmail).
spring.mail.properties.mail.smtp.starttls.enable=true
#Abilita la modalità debug per le email inviate.
spring.mail.properties.mail.debug=true
#Specifica il server SMTP di fiducia (nel caso di Gmail, di solito non è necessario poiché viene gestito internamente).
spring.mail.properties.java.mail.smtp.ssl.trust=smtp.gmail.com

#SpringSecurity
#jwt.secret=mySuperSecretKey123
#jwt.expirationMs=864000000